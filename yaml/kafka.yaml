---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: chat
spec:
  serviceName: "kafka"
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: bitnami/kafka:latest
        ports:
        - containerPort: 9092
        env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: KAFKA_CFG_NODE_ID
          value: "0"
        - name: KAFKA_CFG_PROCESS_ROLES
          value: "controller,broker"
        - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
          value: "0@kafka-0.kafka-headless.chat.svc.cluster.local:9093"
        - name: KAFKA_CFG_LISTENERS
          value: "PLAINTEXT://:9092,CONTROLLER://:9093"
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka-0.kafka-headless.chat.svc.cluster.local:9092"
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
        - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
          value: "CONTROLLER"
        - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
          value: "PLAINTEXT"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-headless
  namespace: chat
spec:
  clusterIP: None
  selector:
    app: kafka
  ports:
    - name: broker
      port: 9092
    - name: controller
      port: 9093
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: chat
spec:
  selector:
    app: kafka
  ports:
    - name: broker
      port: 9092
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kafka-topic-creator
  namespace: chat
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: kafka-topic-creator
        image: bitnami/kafka:latest
        command: 
        - /bin/bash
        - -c
        - |
          sleep 30
          kafka-topics.sh --create --topic user --partitions 1 --bootstrap-server kafka:9092
          echo "Topic 'user' created successfully"