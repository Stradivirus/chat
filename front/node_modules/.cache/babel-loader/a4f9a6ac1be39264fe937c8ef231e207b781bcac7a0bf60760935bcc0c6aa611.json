{"ast":null,"code":"var _jsxFileName = \"/home/work/chat/front/src/pages/ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ChatMessages from '../components/ChatMessages';\nimport ChatInput from '../components/ChatInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatPage({\n  currentUser\n}) {\n  _s();\n  // currentUser prop 추가\n  const [messages, setMessages] = useState([]);\n  const handleSendMessage = message => {\n    if (currentUser) {\n      // 로그인한 사용자만 메시지 전송 가능\n      setMessages([...messages, {\n        text: message,\n        sender: 'user'\n      }]);\n      // 여기에서 서버로 메시지를 보내는 로직을 추가할 수 있습니다.\n\n      // 예시: 다른 사용자의 메시지를 시뮬레이션\n      setTimeout(() => {\n        setMessages(prev => [...prev, {\n          text: \"다른 사용자의 응답입니다.\",\n          sender: 'other'\n        }]);\n      }, 1000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), currentUser ? /*#__PURE__*/_jsxDEV(ChatInput, {\n      onSendMessage: handleSendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input disabled\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-message\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uB85C\\uADF8\\uC778 \\uD574\\uC8FC\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatPage, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","ChatMessages","ChatInput","jsxDEV","_jsxDEV","ChatPage","currentUser","_s","messages","setMessages","handleSendMessage","message","text","sender","setTimeout","prev","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","onSendMessage","_c","$RefreshReg$"],"sources":["/home/work/chat/front/src/pages/ChatPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ChatMessages from '../components/ChatMessages';\nimport ChatInput from '../components/ChatInput';\n\nfunction ChatPage({ currentUser }) {  // currentUser prop 추가\n  const [messages, setMessages] = useState([]);\n\n  const handleSendMessage = (message) => {\n    if (currentUser) {  // 로그인한 사용자만 메시지 전송 가능\n      setMessages([...messages, { text: message, sender: 'user' }]);\n      // 여기에서 서버로 메시지를 보내는 로직을 추가할 수 있습니다.\n      \n      // 예시: 다른 사용자의 메시지를 시뮬레이션\n      setTimeout(() => {\n        setMessages(prev => [...prev, { text: \"다른 사용자의 응답입니다.\", sender: 'other' }]);\n      }, 1000);\n    }\n  };\n\n  return (\n    <div className=\"chat-page\">\n      <div className=\"chat-messages\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`message ${msg.sender}`}>\n            {msg.text}\n          </div>\n        ))}\n      </div>\n      {currentUser ? (\n        <ChatInput onSendMessage={handleSendMessage} />\n      ) : (\n        <div className=\"chat-input disabled\">\n          <p className=\"login-message\"><strong>로그인 해주세요</strong></p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ChatPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,QAAQA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAAG;EACpC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,iBAAiB,GAAIC,OAAO,IAAK;IACrC,IAAIL,WAAW,EAAE;MAAG;MAClBG,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEI,IAAI,EAAED,OAAO;QAAEE,MAAM,EAAE;MAAO,CAAC,CAAC,CAAC;MAC7D;;MAEA;MACAC,UAAU,CAAC,MAAM;QACfL,WAAW,CAACM,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;UAAEH,IAAI,EAAE,gBAAgB;UAAEC,MAAM,EAAE;QAAQ,CAAC,CAAC,CAAC;MAC7E,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EAED,oBACET,OAAA;IAAKY,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBb,OAAA;MAAKY,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BT,QAAQ,CAACU,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBhB,OAAA;QAAiBY,SAAS,EAAE,WAAWG,GAAG,CAACN,MAAM,EAAG;QAAAI,QAAA,EACjDE,GAAG,CAACP;MAAI,GADDQ,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLlB,WAAW,gBACVF,OAAA,CAACF,SAAS;MAACuB,aAAa,EAAEf;IAAkB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE/CpB,OAAA;MAAKY,SAAS,EAAC,qBAAqB;MAAAC,QAAA,eAClCb,OAAA;QAAGY,SAAS,EAAC,eAAe;QAAAC,QAAA,eAACb,OAAA;UAAAa,QAAA,EAAQ;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACjB,EAAA,CAjCQF,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AAmCjB,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}