{"ast":null,"code":"import React,{useEffect,useRef}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ChatMessages(_ref){let{messages,currentUserId}=_ref;const messagesEndRef=useRef(null);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});};useEffect(scrollToBottom,[messages]);return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-messages\",children:[messages.map((message,index)=>{let messageContent,sender,username;// 메시지가 문자열인 경우 JSON으로 파싱\nif(typeof message==='string'){try{const parsedMessage=JSON.parse(message);messageContent=parsedMessage.message;sender=parsedMessage.sender;username=parsedMessage.username;}catch(e){console.error(\"Failed to parse message:\",e);return null;// 파싱 실패 시 이 메시지는 렌더링하지 않음\n}}else{// 이미 객체인 경우 직접 사용\nmessageContent=message.message||message.text;sender=message.sender;username=message.username;}// 메시지 내용이 없거나 '내용 없음'인 경우 렌더링하지 않음\nif(!messageContent||messageContent.trim()===''||messageContent==='내용 없음'){return null;}return/*#__PURE__*/_jsxs(\"div\",{className:`message ${sender===currentUserId?'user':'other'}`,children:[sender!==currentUserId&&/*#__PURE__*/_jsxs(\"span\",{className:\"message-username\",children:[/*#__PURE__*/_jsx(\"strong\",{children:username||'Anonymous'}),\" \"]}),/*#__PURE__*/_jsx(\"span\",{children:messageContent})]},index);}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]});}export default ChatMessages;","map":{"version":3,"names":["React","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","ChatMessages","_ref","messages","currentUserId","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","className","children","map","message","index","messageContent","sender","username","parsedMessage","JSON","parse","e","console","error","text","trim","ref"],"sources":["/home/work/chat/front/src/components/ChatMessages.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nfunction ChatMessages({ messages, currentUserId }) {\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n\n  return (\n    <div className=\"chat-messages\">\n      {messages.map((message, index) => {\n        let messageContent, sender, username;\n        \n        // 메시지가 문자열인 경우 JSON으로 파싱\n        if (typeof message === 'string') {\n          try {\n            const parsedMessage = JSON.parse(message);\n            messageContent = parsedMessage.message;\n            sender = parsedMessage.sender;\n            username = parsedMessage.username;\n          } catch (e) {\n            console.error(\"Failed to parse message:\", e);\n            return null; // 파싱 실패 시 이 메시지는 렌더링하지 않음\n          }\n        } else {\n          // 이미 객체인 경우 직접 사용\n          messageContent = message.message || message.text;\n          sender = message.sender;\n          username = message.username;\n        }\n\n        // 메시지 내용이 없거나 '내용 없음'인 경우 렌더링하지 않음\n        if (!messageContent || messageContent.trim() === '' || messageContent === '내용 없음') {\n          return null;\n        }\n\n        return (\n          <div \n            key={index} \n            className={`message ${sender === currentUserId ? 'user' : 'other'}`}\n          >\n            {sender !== currentUserId && (\n              <span className=\"message-username\"><strong>{username || 'Anonymous'}</strong> </span>\n            )}\n            <span>{messageContent}</span>\n          </div>\n        );\n      })}\n      <div ref={messagesEndRef} />\n    </div>\n  );\n}\n\nexport default ChatMessages;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjD,QAAS,CAAAC,YAAYA,CAAAC,IAAA,CAA8B,IAA7B,CAAEC,QAAQ,CAAEC,aAAc,CAAC,CAAAF,IAAA,CAC/C,KAAM,CAAAG,cAAc,CAAGT,MAAM,CAAC,IAAI,CAAC,CAEnC,KAAM,CAAAU,cAAc,CAAGA,CAAA,GAAM,KAAAC,qBAAA,CAC3B,CAAAA,qBAAA,CAAAF,cAAc,CAACG,OAAO,UAAAD,qBAAA,iBAAtBA,qBAAA,CAAwBE,cAAc,CAAC,CAAEC,QAAQ,CAAE,QAAS,CAAC,CAAC,CAChE,CAAC,CAEDf,SAAS,CAACW,cAAc,CAAE,CAACH,QAAQ,CAAC,CAAC,CAErC,mBACEH,KAAA,QAAKW,SAAS,CAAC,eAAe,CAAAC,QAAA,EAC3BT,QAAQ,CAACU,GAAG,CAAC,CAACC,OAAO,CAAEC,KAAK,GAAK,CAChC,GAAI,CAAAC,cAAc,CAAEC,MAAM,CAAEC,QAAQ,CAEpC;AACA,GAAI,MAAO,CAAAJ,OAAO,GAAK,QAAQ,CAAE,CAC/B,GAAI,CACF,KAAM,CAAAK,aAAa,CAAGC,IAAI,CAACC,KAAK,CAACP,OAAO,CAAC,CACzCE,cAAc,CAAGG,aAAa,CAACL,OAAO,CACtCG,MAAM,CAAGE,aAAa,CAACF,MAAM,CAC7BC,QAAQ,CAAGC,aAAa,CAACD,QAAQ,CACnC,CAAE,MAAOI,CAAC,CAAE,CACVC,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAEF,CAAC,CAAC,CAC5C,MAAO,KAAI,CAAE;AACf,CACF,CAAC,IAAM,CACL;AACAN,cAAc,CAAGF,OAAO,CAACA,OAAO,EAAIA,OAAO,CAACW,IAAI,CAChDR,MAAM,CAAGH,OAAO,CAACG,MAAM,CACvBC,QAAQ,CAAGJ,OAAO,CAACI,QAAQ,CAC7B,CAEA;AACA,GAAI,CAACF,cAAc,EAAIA,cAAc,CAACU,IAAI,CAAC,CAAC,GAAK,EAAE,EAAIV,cAAc,GAAK,OAAO,CAAE,CACjF,MAAO,KAAI,CACb,CAEA,mBACEhB,KAAA,QAEEW,SAAS,CAAE,WAAWM,MAAM,GAAKb,aAAa,CAAG,MAAM,CAAG,OAAO,EAAG,CAAAQ,QAAA,EAEnEK,MAAM,GAAKb,aAAa,eACvBJ,KAAA,SAAMW,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAACd,IAAA,WAAAc,QAAA,CAASM,QAAQ,EAAI,WAAW,CAAS,CAAC,IAAC,EAAM,CACrF,cACDpB,IAAA,SAAAc,QAAA,CAAOI,cAAc,CAAO,CAAC,GANxBD,KAOF,CAAC,CAEV,CAAC,CAAC,cACFjB,IAAA,QAAK6B,GAAG,CAAEtB,cAAe,CAAE,CAAC,EACzB,CAAC,CAEV,CAEA,cAAe,CAAAJ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}