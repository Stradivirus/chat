{"ast":null,"code":"import{useState,useEffect,useCallback}from'react';const WS_URL='ws://218.156.126.186:8000/ws';function useWebSocket(user){const[socket,setSocket]=useState(null);const[messages,setMessages]=useState([]);const[userCount,setUserCount]=useState(0);const[chatBanTimeLeft,setChatBanTimeLeft]=useState(0);const[isConnecting,setIsConnecting]=useState(false);const setupWebSocket=useCallback(()=>{if(!user||isConnecting)return;setIsConnecting(true);const newSocket=new WebSocket(`${WS_URL}/${user.userId}`);newSocket.onopen=()=>{console.log('WebSocket Connected');setSocket(newSocket);setIsConnecting(false);};newSocket.onmessage=event=>{const data=JSON.parse(event.data);console.log('Received message:',data);if(data.type==='user_count'){setUserCount(data.count);}else if(data.type==='chat_banned'){setChatBanTimeLeft(data.time_left);}else{setMessages(prev=>[...prev,data]);}};newSocket.onclose=()=>{console.log('WebSocket Disconnected');setSocket(null);setIsConnecting(false);setTimeout(setupWebSocket,3000);};newSocket.onerror=error=>{console.error('WebSocket Error:',error);setIsConnecting(false);};return()=>{newSocket.close();};},[user]);useEffect(()=>{if(user){const timer=setTimeout(setupWebSocket,1000);return()=>{clearTimeout(timer);if(socket){socket.close();}};}},[user,setupWebSocket]);const sendMessage=useCallback(messageText=>{if(socket&&socket.readyState===WebSocket.OPEN&&user){const messageObj={message:messageText,sender:user.userId,username:user.username,timestamp:Date.now()};socket.send(JSON.stringify(messageObj));}else{console.error('WebSocket is not connected or user is not logged in');}},[socket,user]);return{socket,messages,userCount,chatBanTimeLeft,sendMessage,isConnecting};}export default useWebSocket;","map":{"version":3,"names":["useState","useEffect","useCallback","WS_URL","useWebSocket","user","socket","setSocket","messages","setMessages","userCount","setUserCount","chatBanTimeLeft","setChatBanTimeLeft","isConnecting","setIsConnecting","setupWebSocket","newSocket","WebSocket","userId","onopen","console","log","onmessage","event","data","JSON","parse","type","count","time_left","prev","onclose","setTimeout","onerror","error","close","timer","clearTimeout","sendMessage","messageText","readyState","OPEN","messageObj","message","sender","username","timestamp","Date","now","send","stringify"],"sources":["/home/work/chat/front/src/hooks/useWebSocket.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\n\nconst WS_URL = 'ws://218.156.126.186:8000/ws';\n\nfunction useWebSocket(user) {\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [userCount, setUserCount] = useState(0);\n  const [chatBanTimeLeft, setChatBanTimeLeft] = useState(0);\n  const [isConnecting, setIsConnecting] = useState(false);\n\n  const setupWebSocket = useCallback(() => {\n    if (!user || isConnecting) return;\n\n    setIsConnecting(true);\n    const newSocket = new WebSocket(`${WS_URL}/${user.userId}`);\n\n    newSocket.onopen = () => {\n      console.log('WebSocket Connected');\n      setSocket(newSocket);\n      setIsConnecting(false);\n    };\n\n    newSocket.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      console.log('Received message:', data);\n      if (data.type === 'user_count') {\n        setUserCount(data.count);\n      } else if (data.type === 'chat_banned') {\n        setChatBanTimeLeft(data.time_left);\n      } else {\n        setMessages(prev => [...prev, data]);\n      }\n    };\n\n    newSocket.onclose = () => {\n      console.log('WebSocket Disconnected');\n      setSocket(null);\n      setIsConnecting(false);\n      setTimeout(setupWebSocket, 3000);\n    };\n\n    newSocket.onerror = (error) => {\n      console.error('WebSocket Error:', error);\n      setIsConnecting(false);\n    };\n\n    return () => {\n      newSocket.close();\n    };\n  }, [user]);\n\n  useEffect(() => {\n    if (user) {\n      const timer = setTimeout(setupWebSocket, 1000);\n      return () => {\n        clearTimeout(timer);\n        if (socket) {\n          socket.close();\n        }\n      };\n    }\n  }, [user, setupWebSocket]);\n\n  const sendMessage = useCallback((messageText) => {\n    if (socket && socket.readyState === WebSocket.OPEN && user) {\n      const messageObj = {\n        message: messageText,\n        sender: user.userId,\n        username: user.username,\n        timestamp: Date.now()\n      };\n      socket.send(JSON.stringify(messageObj));\n    } else {\n      console.error('WebSocket is not connected or user is not logged in');\n    }\n  }, [socket, user]);\n\n  return { socket, messages, userCount, chatBanTimeLeft, sendMessage, isConnecting };\n}\n\nexport default useWebSocket;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}