{"ast":null,"code":"var _jsxFileName = \"/home/work/chat/front/src/pages/ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport ChatMessages from '../components/ChatMessages';\nimport ChatInput from '../components/ChatInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatPage({\n  socket,\n  clientId,\n  user\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const handleSendMessage = useCallback(messageText => {\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      const messageObj = {\n        message: messageText,\n        sender: clientId,\n        timestamp: Date.now()\n      };\n      socket.send(JSON.stringify(messageObj));\n    } else {\n      console.error('WebSocket is not connected');\n    }\n  }, [socket, clientId]);\n  useEffect(() => {\n    if (!socket) return;\n    const handleMessage = event => {\n      const data = JSON.parse(event.data);\n      setMessages(prev => {\n        const isDuplicate = prev.some(msg => msg.timestamp === data.timestamp);\n        if (isDuplicate) return prev;\n        return [...prev, {\n          text: data.message || data.text,\n          sender: data.sender === clientId ? 'user' : 'other',\n          timestamp: data.timestamp\n        }];\n      });\n    };\n    socket.addEventListener('message', handleMessage);\n    return () => {\n      socket.removeEventListener('message', handleMessage);\n    };\n  }, [socket, clientId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page\",\n    children: [/*#__PURE__*/_jsxDEV(ChatMessages, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      onSendMessage: handleSendMessage,\n      isLoggedIn: !!user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatPage, \"HfRglZYSsAsHKuz/ZJXLgM/MN88=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ChatMessages","ChatInput","jsxDEV","_jsxDEV","ChatPage","socket","clientId","user","_s","messages","setMessages","handleSendMessage","messageText","readyState","WebSocket","OPEN","messageObj","message","sender","timestamp","Date","now","send","JSON","stringify","console","error","handleMessage","event","data","parse","prev","isDuplicate","some","msg","text","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSendMessage","isLoggedIn","_c","$RefreshReg$"],"sources":["/home/work/chat/front/src/pages/ChatPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport ChatMessages from '../components/ChatMessages';\nimport ChatInput from '../components/ChatInput';\n\nfunction ChatPage({ socket, clientId, user }) {\n  const [messages, setMessages] = useState([]);\n\n  const handleSendMessage = useCallback((messageText) => {\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      const messageObj = {\n        message: messageText,\n        sender: clientId,\n        timestamp: Date.now()\n      };\n      socket.send(JSON.stringify(messageObj));\n    } else {\n      console.error('WebSocket is not connected');\n    }\n  }, [socket, clientId]);\n\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleMessage = (event) => {\n      const data = JSON.parse(event.data);\n      \n      setMessages(prev => {\n        const isDuplicate = prev.some(msg => msg.timestamp === data.timestamp);\n        if (isDuplicate) return prev;\n\n        return [...prev, {\n          text: data.message || data.text,\n          sender: data.sender === clientId ? 'user' : 'other',\n          timestamp: data.timestamp\n        }];\n      });\n    };\n\n    socket.addEventListener('message', handleMessage);\n\n    return () => {\n      socket.removeEventListener('message', handleMessage);\n    };\n  }, [socket, clientId]);\n\n  return (\n    <div className=\"chat-page\">\n      <ChatMessages messages={messages} />\n      <ChatInput onSendMessage={handleSendMessage} isLoggedIn={!!user} />\n    </div>\n  );\n}\n\nexport default ChatPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,QAAQA,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMc,iBAAiB,GAAGZ,WAAW,CAAEa,WAAW,IAAK;IACrD,IAAIP,MAAM,IAAIA,MAAM,CAACQ,UAAU,KAAKC,SAAS,CAACC,IAAI,EAAE;MAClD,MAAMC,UAAU,GAAG;QACjBC,OAAO,EAAEL,WAAW;QACpBM,MAAM,EAAEZ,QAAQ;QAChBa,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;MACtB,CAAC;MACDhB,MAAM,CAACiB,IAAI,CAACC,IAAI,CAACC,SAAS,CAACR,UAAU,CAAC,CAAC;IACzC,CAAC,MAAM;MACLS,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAC;IAC7C;EACF,CAAC,EAAE,CAACrB,MAAM,EAAEC,QAAQ,CAAC,CAAC;EAEtBR,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,MAAM,EAAE;IAEb,MAAMsB,aAAa,GAAIC,KAAK,IAAK;MAC/B,MAAMC,IAAI,GAAGN,IAAI,CAACO,KAAK,CAACF,KAAK,CAACC,IAAI,CAAC;MAEnCnB,WAAW,CAACqB,IAAI,IAAI;QAClB,MAAMC,WAAW,GAAGD,IAAI,CAACE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACf,SAAS,KAAKU,IAAI,CAACV,SAAS,CAAC;QACtE,IAAIa,WAAW,EAAE,OAAOD,IAAI;QAE5B,OAAO,CAAC,GAAGA,IAAI,EAAE;UACfI,IAAI,EAAEN,IAAI,CAACZ,OAAO,IAAIY,IAAI,CAACM,IAAI;UAC/BjB,MAAM,EAAEW,IAAI,CAACX,MAAM,KAAKZ,QAAQ,GAAG,MAAM,GAAG,OAAO;UACnDa,SAAS,EAAEU,IAAI,CAACV;QAClB,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IAEDd,MAAM,CAAC+B,gBAAgB,CAAC,SAAS,EAAET,aAAa,CAAC;IAEjD,OAAO,MAAM;MACXtB,MAAM,CAACgC,mBAAmB,CAAC,SAAS,EAAEV,aAAa,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,CAACtB,MAAM,EAAEC,QAAQ,CAAC,CAAC;EAEtB,oBACEH,OAAA;IAAKmC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBpC,OAAA,CAACH,YAAY;MAACS,QAAQ,EAAEA;IAAS;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpCxC,OAAA,CAACF,SAAS;MAAC2C,aAAa,EAAEjC,iBAAkB;MAACkC,UAAU,EAAE,CAAC,CAACtC;IAAK;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEV;AAACnC,EAAA,CA/CQJ,QAAQ;AAAA0C,EAAA,GAAR1C,QAAQ;AAiDjB,eAAeA,QAAQ;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}