{"ast":null,"code":"var _jsxFileName = \"/home/work/chat/front/src/pages/ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport ChatMessages from '../components/ChatMessages';\nimport ChatInput from '../components/ChatInput';\nimport { useWebSocket } from '../hooks/useWebSocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatPage({\n  user\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const {\n    socket,\n    userCount,\n    chatBanTimeLeft,\n    sendMessage\n  } = useWebSocket(user);\n  const handleSendMessage = useCallback(messageText => {\n    if (user) {\n      const messageObj = {\n        type: 'chat',\n        message: messageText,\n        sender_id: user.userId,\n        username: user.username,\n        timestamp: Date.now()\n      };\n      sendMessage(messageObj);\n    } else {\n      console.error('User is not logged in');\n    }\n  }, [user, sendMessage]);\n  useEffect(() => {\n    if (!socket) return;\n    const handleMessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.type !== 'user_count' && data.type !== 'chat_banned') {\n        setMessages(prev => {\n          const isDuplicate = prev.some(msg => msg.timestamp === data.timestamp && msg.sender_id === data.sender_id);\n          const isEmptyContent = !data.message || data.message.trim() === '' || data.message === '내용 없음';\n          if (isDuplicate || isEmptyContent) return prev;\n          return [...prev, data];\n        });\n      }\n    };\n    socket.addEventListener('message', handleMessage);\n    return () => {\n      socket.removeEventListener('message', handleMessage);\n    };\n  }, [socket]);\n  useEffect(() => {\n    setMessages([]);\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page\",\n    children: [/*#__PURE__*/_jsxDEV(ChatMessages, {\n      messages: messages,\n      currentUserId: user === null || user === void 0 ? void 0 : user.userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      onSendMessage: handleSendMessage,\n      isLoggedIn: !!user,\n      chatBanTimeLeft: chatBanTimeLeft\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatPage, \"Kv6sMd5QhXVXjZkwnSzhOuGiq+g=\", false, function () {\n  return [useWebSocket];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ChatMessages","ChatInput","useWebSocket","jsxDEV","_jsxDEV","ChatPage","user","_s","messages","setMessages","socket","userCount","chatBanTimeLeft","sendMessage","handleSendMessage","messageText","messageObj","type","message","sender_id","userId","username","timestamp","Date","now","console","error","handleMessage","event","data","JSON","parse","prev","isDuplicate","some","msg","isEmptyContent","trim","addEventListener","removeEventListener","className","children","currentUserId","fileName","_jsxFileName","lineNumber","columnNumber","onSendMessage","isLoggedIn","_c","$RefreshReg$"],"sources":["/home/work/chat/front/src/pages/ChatPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport ChatMessages from '../components/ChatMessages';\nimport ChatInput from '../components/ChatInput';\nimport { useWebSocket } from '../hooks/useWebSocket';\n\nfunction ChatPage({ user }) {\n  const [messages, setMessages] = useState([]);\n\n  const {\n    socket,\n    userCount,\n    chatBanTimeLeft,\n    sendMessage\n  } = useWebSocket(user);\n\n  const handleSendMessage = useCallback((messageText) => {\n    if (user) {\n      const messageObj = {\n        type: 'chat',\n        message: messageText,\n        sender_id: user.userId,\n        username: user.username,\n        timestamp: Date.now()\n      };\n      sendMessage(messageObj);\n    } else {\n      console.error('User is not logged in');\n    }\n  }, [user, sendMessage]);\n\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleMessage = (event) => {\n      const data = JSON.parse(event.data);\n            \n      if (data.type !== 'user_count' && data.type !== 'chat_banned') {\n        setMessages(prev => {\n          const isDuplicate = prev.some(msg => \n            msg.timestamp === data.timestamp && msg.sender_id === data.sender_id\n          );\n          const isEmptyContent = !data.message || data.message.trim() === '' || data.message === '내용 없음';\n          \n          if (isDuplicate || isEmptyContent) return prev;\n\n          return [...prev, data];\n        });\n      }\n    };\n\n    socket.addEventListener('message', handleMessage);\n\n    return () => {\n      socket.removeEventListener('message', handleMessage);\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    setMessages([]);\n  }, [user]);\n\n  return (\n    <div className=\"chat-page\">\n      <ChatMessages messages={messages} currentUserId={user?.userId} />\n      <ChatInput \n        onSendMessage={handleSendMessage} \n        isLoggedIn={!!user}\n        chatBanTimeLeft={chatBanTimeLeft}\n      />\n    </div>\n  );\n}\n\nexport default ChatPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}