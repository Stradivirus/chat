{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import ChatMessages from'../components/ChatMessages';import ChatInput from'../components/ChatInput';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ChatPage(_ref){let{socket,user,chatBanTimeLeft,sendMessage}=_ref;// 채팅 메시지를 저장하는 상태\nconst[messages,setMessages]=useState([]);// 메시지 전송 핸들러\nconst handleSendMessage=useCallback(messageText=>{if(user){const messageObj={message:messageText,sender_id:user.userId,username:user.username,timestamp:Date.now()};sendMessage(messageObj);}else{console.error('User is not logged in');}},[user,sendMessage]);// 웹소켓 메시지 수신 처리\nuseEffect(()=>{if(!socket)return;const handleMessage=event=>{const data=JSON.parse(event.data);// 사용자 수 업데이트와 채팅 금지 메시지는 무시\nif(data.type!=='user_count'&&data.type!=='chat_banned'){setMessages(prev=>{// 중복 메시지 및 빈 메시지 필터링\nconst isDuplicate=prev.some(msg=>msg.timestamp===data.timestamp&&msg.sender_id===data.sender_id);const isEmptyContent=!data.message||data.message.trim()===''||data.message==='내용 없음';if(isDuplicate||isEmptyContent)return prev;return[...prev,data];});}};socket.addEventListener('message',handleMessage);// 컴포넌트 언마운트 시 이벤트 리스너 제거\nreturn()=>{socket.removeEventListener('message',handleMessage);};},[socket]);// 사용자 변경 시 메시지 초기화\nuseEffect(()=>{setMessages([]);},[user]);return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-page\",children:[/*#__PURE__*/_jsx(ChatMessages,{messages:messages,currentUserId:user===null||user===void 0?void 0:user.userId}),/*#__PURE__*/_jsx(ChatInput,{onSendMessage:handleSendMessage,isLoggedIn:!!user,chatBanTimeLeft:chatBanTimeLeft})]});}export default ChatPage;","map":{"version":3,"names":["React","useState","useEffect","useCallback","ChatMessages","ChatInput","jsx","_jsx","jsxs","_jsxs","ChatPage","_ref","socket","user","chatBanTimeLeft","sendMessage","messages","setMessages","handleSendMessage","messageText","messageObj","message","sender_id","userId","username","timestamp","Date","now","console","error","handleMessage","event","data","JSON","parse","type","prev","isDuplicate","some","msg","isEmptyContent","trim","addEventListener","removeEventListener","className","children","currentUserId","onSendMessage","isLoggedIn"],"sources":["/home/work/chat/front/src/pages/ChatPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport ChatMessages from '../components/ChatMessages';\nimport ChatInput from '../components/ChatInput';\n\nfunction ChatPage({ socket, user, chatBanTimeLeft, sendMessage }) {\n  // 채팅 메시지를 저장하는 상태\n  const [messages, setMessages] = useState([]);\n\n  // 메시지 전송 핸들러\n  const handleSendMessage = useCallback((messageText) => {\n    if (user) {\n      const messageObj = {\n        message: messageText,\n        sender_id: user.userId,\n        username: user.username,\n        timestamp: Date.now()\n      };\n      sendMessage(messageObj);\n    } else {\n      console.error('User is not logged in');\n    }\n  }, [user, sendMessage]);\n\n  // 웹소켓 메시지 수신 처리\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleMessage = (event) => {\n      const data = JSON.parse(event.data);\n            \n      // 사용자 수 업데이트와 채팅 금지 메시지는 무시\n      if (data.type !== 'user_count' && data.type !== 'chat_banned') {\n        setMessages(prev => {\n          // 중복 메시지 및 빈 메시지 필터링\n          const isDuplicate = prev.some(msg => \n            msg.timestamp === data.timestamp && msg.sender_id === data.sender_id\n          );\n          const isEmptyContent = !data.message || data.message.trim() === '' || data.message === '내용 없음';\n          \n          if (isDuplicate || isEmptyContent) return prev;\n\n          return [...prev, data];\n        });\n      }\n    };\n\n    socket.addEventListener('message', handleMessage);\n\n    // 컴포넌트 언마운트 시 이벤트 리스너 제거\n    return () => {\n      socket.removeEventListener('message', handleMessage);\n    };\n  }, [socket]);\n\n  // 사용자 변경 시 메시지 초기화\n  useEffect(() => {\n    setMessages([]);\n  }, [user]);\n\n  return (\n    <div className=\"chat-page\">\n      <ChatMessages messages={messages} currentUserId={user?.userId} />\n      <ChatInput \n        onSendMessage={handleSendMessage} \n        isLoggedIn={!!user}\n        chatBanTimeLeft={chatBanTimeLeft}\n      />\n    </div>\n  );\n}\n\nexport default ChatPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}