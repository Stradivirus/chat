{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{ThemeProvider,useTheme}from'./contexts/ThemeContext';import ChatPage from'./pages/ChatPage';import AuthModal from'./components/AuthModal';import{useWebSocket}from'./hooks/useWebSocket';import'./styles/base.css';import'./styles/components.css';import'./styles/utilities.css';// AppContent 컴포넌트: 애플리케이션의 주요 내용을 담당\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function AppContent(){// 상태 관리\nconst[showAuthModal,setShowAuthModal]=useState(false);// 인증 모달 표시 여부\nconst[authType,setAuthType]=useState(null);// 인증 타입 (로그인/회원가입)\nconst{isDarkMode,toggleTheme}=useTheme();// 테마 관련 상태 및 함수\nconst[user,setUser]=useState(null);// 현재 로그인한 사용자 정보\n// useWebSocket 훅 사용\nconst{socket,userCount,showSessionExpiredModal,setShowSessionExpiredModal,chatBanTimeLeft,sendMessage}=useWebSocket(user);// 인증 버튼 클릭 핸들러\nconst handleAuthButton=type=>{setAuthType(type);setShowAuthModal(true);};// 모달 닫기 핸들러\nconst handleCloseModal=()=>{setShowAuthModal(false);setAuthType(null);};// 로그인 성공 핸들러\nconst handleLoginSuccess=useCallback(userData=>{console.log('Login successful:',userData);setUser(userData);handleCloseModal();},[]);// 로그아웃 핸들러\nconst handleLogout=()=>{setUser(null);if(socket){socket.close(1000,\"Logout\");}};// 세션 만료 핸들러\nconst handleSessionExpired=()=>{setShowSessionExpiredModal(false);handleLogout();};return/*#__PURE__*/_jsxs(\"div\",{className:`App ${isDarkMode?'dark-mode':'light-mode'}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"main-section\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"main-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"\\uCC44\\uD305 \\uC560\\uD50C\\uB9AC\\uCF00\\uC774\\uC158\"})}),/*#__PURE__*/_jsx(\"main\",{className:\"main-content\"})]}),/*#__PURE__*/_jsxs(\"aside\",{className:\"side-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"side-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user-count\",children:[\"\\uD604\\uC7AC \\uC811\\uC18D\\uC790 \\uC218: \",userCount]}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-buttons\",children:[user?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"span\",{className:\"user-nickname\",children:[user.username,\"\\uB2D8\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,className:\"logout-button\",children:\"\\uB85C\\uADF8\\uC544\\uC6C3\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleAuthButton('login'),children:\"\\uB85C\\uADF8\\uC778\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleAuthButton('register'),children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleTheme,className:\"theme-toggle\",children:isDarkMode?'라이트':'다크'})]})]}),/*#__PURE__*/_jsx(ChatPage,{socket:socket,user:user,chatBanTimeLeft:chatBanTimeLeft,sendMessage:sendMessage})]}),showAuthModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-backdrop\",children:/*#__PURE__*/_jsx(AuthModal,{type:authType,onClose:handleCloseModal,onLoginSuccess:handleLoginSuccess})}),showSessionExpiredModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-backdrop\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"session-expired-modal\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uB2E4\\uB978 \\uAE30\\uAE30\\uC5D0\\uC11C \\uB85C\\uADF8\\uC778\\uB418\\uC5B4 \\uB85C\\uADF8\\uC544\\uC6C3 \\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSessionExpired,children:\"\\uD655\\uC778\"})]})})]});}// App 컴포넌트: ThemeProvider로 AppContent를 감싸 테마 기능 제공\nfunction App(){return/*#__PURE__*/_jsx(ThemeProvider,{children:/*#__PURE__*/_jsx(AppContent,{})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","ThemeProvider","useTheme","ChatPage","AuthModal","useWebSocket","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AppContent","showAuthModal","setShowAuthModal","authType","setAuthType","isDarkMode","toggleTheme","user","setUser","socket","userCount","showSessionExpiredModal","setShowSessionExpiredModal","chatBanTimeLeft","sendMessage","handleAuthButton","type","handleCloseModal","handleLoginSuccess","userData","console","log","handleLogout","close","handleSessionExpired","className","children","username","onClick","onClose","onLoginSuccess","App"],"sources":["/home/work/chat/front/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { ThemeProvider, useTheme } from './contexts/ThemeContext';\nimport ChatPage from './pages/ChatPage';\nimport AuthModal from './components/AuthModal';\nimport { useWebSocket } from './hooks/useWebSocket';\nimport './styles/base.css';\nimport './styles/components.css';\nimport './styles/utilities.css';\n\n// AppContent 컴포넌트: 애플리케이션의 주요 내용을 담당\nfunction AppContent() {\n  // 상태 관리\n  const [showAuthModal, setShowAuthModal] = useState(false);  // 인증 모달 표시 여부\n  const [authType, setAuthType] = useState(null);  // 인증 타입 (로그인/회원가입)\n  const { isDarkMode, toggleTheme } = useTheme();  // 테마 관련 상태 및 함수\n  const [user, setUser] = useState(null);  // 현재 로그인한 사용자 정보\n\n  // useWebSocket 훅 사용\n  const {\n    socket,\n    userCount,\n    showSessionExpiredModal,\n    setShowSessionExpiredModal,\n    chatBanTimeLeft,\n    sendMessage\n  } = useWebSocket(user);\n\n  // 인증 버튼 클릭 핸들러\n  const handleAuthButton = (type) => {\n    setAuthType(type);\n    setShowAuthModal(true);\n  };\n\n  // 모달 닫기 핸들러\n  const handleCloseModal = () => {\n    setShowAuthModal(false);\n    setAuthType(null);\n  };\n\n  // 로그인 성공 핸들러\n  const handleLoginSuccess = useCallback((userData) => {\n    console.log('Login successful:', userData);\n    setUser(userData);\n    handleCloseModal();\n  }, []);\n\n  // 로그아웃 핸들러\n  const handleLogout = () => {\n    setUser(null);\n    if (socket) {\n      socket.close(1000, \"Logout\");\n    }\n  };\n\n  // 세션 만료 핸들러\n  const handleSessionExpired = () => {\n    setShowSessionExpiredModal(false);\n    handleLogout();\n  };\n\n  return (\n    <div className={`App ${isDarkMode ? 'dark-mode' : 'light-mode'}`}>\n      <div className=\"main-section\">\n        <header className=\"main-header\">\n          <h1>채팅 애플리케이션</h1>\n        </header>\n        <main className=\"main-content\">\n          {/* 여기에 메인 콘텐츠가 들어갑니다 */}\n        </main>\n      </div>\n      <aside className=\"side-container\">\n        <header className=\"side-header\">\n          <div className=\"user-count\">현재 접속자 수: {userCount}</div>\n          <div className=\"header-buttons\">\n            {user ? (\n              <>\n                <span className=\"user-nickname\">{user.username}님</span>\n                <button onClick={handleLogout} className=\"logout-button\">로그아웃</button>\n              </>\n            ) : (\n              <>\n                <button onClick={() => handleAuthButton('login')}>로그인</button>\n                <button onClick={() => handleAuthButton('register')}>회원가입</button>\n              </>\n            )}\n            <button onClick={toggleTheme} className=\"theme-toggle\">\n              {isDarkMode ? '라이트' : '다크'}\n            </button>\n          </div>\n        </header>\n        <ChatPage \n          socket={socket} \n          user={user} \n          chatBanTimeLeft={chatBanTimeLeft}\n          sendMessage={sendMessage}\n        />\n      </aside>\n      {/* 인증 모달 */}\n      {showAuthModal && (\n        <div className=\"modal-backdrop\">\n          <AuthModal \n            type={authType} \n            onClose={handleCloseModal}\n            onLoginSuccess={handleLoginSuccess}\n          />\n        </div>\n      )}\n      {/* 세션 만료 모달 */}\n      {showSessionExpiredModal && (\n        <div className=\"modal-backdrop\">\n          <div className=\"session-expired-modal\">\n            <p>다른 기기에서 로그인되어 로그아웃 되었습니다.</p>\n            <button onClick={handleSessionExpired}>확인</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// App 컴포넌트: ThemeProvider로 AppContent를 감싸 테마 기능 제공\nfunction App() {\n  return (\n    <ThemeProvider>\n      <AppContent />\n    </ThemeProvider>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}