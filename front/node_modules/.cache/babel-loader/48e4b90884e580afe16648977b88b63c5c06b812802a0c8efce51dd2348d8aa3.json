{"ast":null,"code":"var _jsxFileName = \"/home/work/chat/front/src/pages/ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ChatMessages from '../components/ChatMessages';\nimport ChatInput from '../components/ChatInput';\nimport AuthModal from '../components/AuthModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatPage() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n    setModalType(null);\n  };\n  const handleRegister = () => {\n    setIsLoggedIn(true);\n    setModalType(null);\n  };\n  const handleSendMessage = message => {\n    if (isLoggedIn) {\n      setMessages([...messages, {\n        text: message,\n        sender: 'user'\n      }]);\n      // 여기에 서버로 메시지를 보내는 로직을 추가할 수 있습니다.\n    } else {\n      alert('메시지를 보내려면 로그인이 필요합니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page\",\n    children: [/*#__PURE__*/_jsxDEV(ChatMessages, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(ChatInput, {\n      onSendMessage: handleSendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setModalType('login'),\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setModalType('register'),\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), modalType && /*#__PURE__*/_jsxDEV(AuthModal, {\n      type: modalType,\n      onLogin: handleLogin,\n      onRegister: handleRegister,\n      onClose: () => setModalType(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatPage, \"5mFDnEGW6KNX74ZQO/G26AFTfW4=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","ChatMessages","ChatInput","AuthModal","jsxDEV","_jsxDEV","ChatPage","_s","isLoggedIn","setIsLoggedIn","modalType","setModalType","messages","setMessages","handleLogin","handleRegister","handleSendMessage","message","text","sender","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSendMessage","onClick","type","onLogin","onRegister","onClose","_c","$RefreshReg$"],"sources":["/home/work/chat/front/src/pages/ChatPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ChatMessages from '../components/ChatMessages';\nimport ChatInput from '../components/ChatInput';\nimport AuthModal from '../components/AuthModal';\n\nfunction ChatPage() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [messages, setMessages] = useState([]);\n\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n    setModalType(null);\n  };\n\n  const handleRegister = () => {\n    setIsLoggedIn(true);\n    setModalType(null);\n  };\n\n  const handleSendMessage = (message) => {\n    if (isLoggedIn) {\n      setMessages([...messages, { text: message, sender: 'user' }]);\n      // 여기에 서버로 메시지를 보내는 로직을 추가할 수 있습니다.\n    } else {\n      alert('메시지를 보내려면 로그인이 필요합니다.');\n    }\n  };\n\n  return (\n    <div className=\"chat-page\">\n      <ChatMessages messages={messages} />\n      {isLoggedIn ? (\n        <ChatInput onSendMessage={handleSendMessage} />\n      ) : (\n        <div className=\"auth-buttons\">\n          <button onClick={() => setModalType('login')}>로그인</button>\n          <button onClick={() => setModalType('register')}>회원가입</button>\n        </div>\n      )}\n      {modalType && (\n        <AuthModal\n          type={modalType}\n          onLogin={handleLogin}\n          onRegister={handleRegister}\n          onClose={() => setModalType(null)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default ChatPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxBL,aAAa,CAAC,IAAI,CAAC;IACnBE,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMI,cAAc,GAAGA,CAAA,KAAM;IAC3BN,aAAa,CAAC,IAAI,CAAC;IACnBE,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMK,iBAAiB,GAAIC,OAAO,IAAK;IACrC,IAAIT,UAAU,EAAE;MACdK,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEM,IAAI,EAAED,OAAO;QAAEE,MAAM,EAAE;MAAO,CAAC,CAAC,CAAC;MAC7D;IACF,CAAC,MAAM;MACLC,KAAK,CAAC,uBAAuB,CAAC;IAChC;EACF,CAAC;EAED,oBACEf,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBjB,OAAA,CAACJ,YAAY;MAACW,QAAQ,EAAEA;IAAS;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACnClB,UAAU,gBACTH,OAAA,CAACH,SAAS;MAACyB,aAAa,EAAEX;IAAkB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE/CrB,OAAA;MAAKgB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BjB,OAAA;QAAQuB,OAAO,EAAEA,CAAA,KAAMjB,YAAY,CAAC,OAAO,CAAE;QAAAW,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1DrB,OAAA;QAAQuB,OAAO,EAAEA,CAAA,KAAMjB,YAAY,CAAC,UAAU,CAAE;QAAAW,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CACN,EACAhB,SAAS,iBACRL,OAAA,CAACF,SAAS;MACR0B,IAAI,EAAEnB,SAAU;MAChBoB,OAAO,EAAEhB,WAAY;MACrBiB,UAAU,EAAEhB,cAAe;MAC3BiB,OAAO,EAAEA,CAAA,KAAMrB,YAAY,CAAC,IAAI;IAAE;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACnB,EAAA,CA7CQD,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AA+CjB,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}