{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import'../styles/AuthModal.css';import{URLS}from'../urls';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const api=axios.create({baseURL:URLS.API_BASE_URL,withCredentials:true});function AuthModal(_ref){let{type,onClose,onLoginSuccess,onSwitchAuthType}=_ref;const[email,setEmail]=useState('');const[username,setUsername]=useState('');const[nickname,setNickname]=useState('');const[password,setPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[errors,setErrors]=useState({});const[isLoading,setIsLoading]=useState(false);const validateForm=()=>{const newErrors={};if(type==='register'){if(!email||!/\\S+@\\S+\\.\\S+/.test(email)){newErrors.email='유효한 이메일 주소를 입력해주세요.';}if(!nickname||nickname.length<2){newErrors.nickname='닉네임은 2자 이상이어야 합니다.';}if(password!==confirmPassword){newErrors.confirmPassword='비밀번호가 일치하지 않습니다.';}}if(!username||username.length<4){newErrors.username='아이디는 4자 이상이어야 합니다.';}if(!password||password.length<8){newErrors.password='비밀번호는 8자 이상이어야 합니다.';}setErrors(newErrors);return Object.keys(newErrors).length===0;};const handleSubmit=async e=>{e.preventDefault();if(validateForm()){setIsLoading(true);try{let response;if(type==='login'){response=await api.post(URLS.LOGIN,{username,password});console.log('Login response:',response.data);if(response.data&&response.data.user_id){onLoginSuccess({userId:response.data.user_id,username:username});}else{throw new Error('Invalid server response');}}else{response=await api.post(URLS.REGISTER,{email,username,nickname,password});console.log('Registration successful:',response.data);if(response.data&&response.data.user_id){onLoginSuccess({userId:response.data.user_id,username:username});}}setIsLoading(false);onClose();}catch(error){console.error('Error:',error.response?error.response.data:error.message);setErrors({api:error.response?error.response.data.detail:'서버 오류가 발생했습니다.'});setIsLoading(false);}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"auth-modal\",children:[/*#__PURE__*/_jsx(\"h2\",{children:type==='login'?'로그인':'회원가입'}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[type==='register'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"\\uC774\\uBA54\\uC77C\",value:email,onChange:e=>setEmail(e.target.value),required:true}),errors.email&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:errors.email}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\uB2C9\\uB124\\uC784\",value:nickname,onChange:e=>setNickname(e.target.value),required:true}),errors.nickname&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:errors.nickname})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\uC544\\uC774\\uB514\",value:username,onChange:e=>setUsername(e.target.value),required:true}),errors.username&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:errors.username}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638\",value:password,onChange:e=>setPassword(e.target.value),required:true}),errors.password&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:errors.password}),type==='register'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),required:true}),errors.confirmPassword&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:errors.confirmPassword})]}),errors.api&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:errors.api}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isLoading,children:isLoading?'처리 중...':type==='login'?'로그인':'회원가입'})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>onSwitchAuthType(type==='login'?'register':'login'),className:\"switch-auth-type\",children:type==='login'?'회원가입':'로그인'}),/*#__PURE__*/_jsx(\"button\",{onClick:onClose,className:\"close-button\",children:\"\\xD7\"})]});}export default AuthModal;","map":{"version":3,"names":["React","useState","axios","URLS","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","api","create","baseURL","API_BASE_URL","withCredentials","AuthModal","_ref","type","onClose","onLoginSuccess","onSwitchAuthType","email","setEmail","username","setUsername","nickname","setNickname","password","setPassword","confirmPassword","setConfirmPassword","errors","setErrors","isLoading","setIsLoading","validateForm","newErrors","test","length","Object","keys","handleSubmit","e","preventDefault","response","post","LOGIN","console","log","data","user_id","userId","Error","REGISTER","error","message","detail","className","children","onSubmit","placeholder","value","onChange","target","required","disabled","onClick"],"sources":["/home/work/chat/front/src/components/AuthModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport '../styles/AuthModal.css';\nimport { URLS } from '../urls';\n\nconst api = axios.create({\n  baseURL: URLS.API_BASE_URL,\n  withCredentials: true\n});\n\nfunction AuthModal({ type, onClose, onLoginSuccess, onSwitchAuthType }) {\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [nickname, setNickname] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errors, setErrors] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (type === 'register') {\n      if (!email || !/\\S+@\\S+\\.\\S+/.test(email)) {\n        newErrors.email = '유효한 이메일 주소를 입력해주세요.';\n      }\n      if (!nickname || nickname.length < 2) {\n        newErrors.nickname = '닉네임은 2자 이상이어야 합니다.';\n      }\n      if (password !== confirmPassword) {\n        newErrors.confirmPassword = '비밀번호가 일치하지 않습니다.';\n      }\n    }\n\n    if (!username || username.length < 4) {\n      newErrors.username = '아이디는 4자 이상이어야 합니다.';\n    }\n    if (!password || password.length < 8) {\n      newErrors.password = '비밀번호는 8자 이상이어야 합니다.';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (validateForm()) {\n      setIsLoading(true);\n      try {\n        let response;\n        if (type === 'login') {\n          response = await api.post(URLS.LOGIN, { username, password });\n          console.log('Login response:', response.data);\n          if (response.data && response.data.user_id) {\n            onLoginSuccess({\n              userId: response.data.user_id,\n              username: username\n            });\n          } else {\n            throw new Error('Invalid server response');\n          }\n        } else {\n          response = await api.post(URLS.REGISTER, { email, username, nickname, password });\n          console.log('Registration successful:', response.data);\n          if (response.data && response.data.user_id) {\n            onLoginSuccess({\n              userId: response.data.user_id,\n              username: username\n            });\n          }\n        }\n        setIsLoading(false);\n        onClose();\n      } catch (error) {\n        console.error('Error:', error.response ? error.response.data : error.message);\n        setErrors({ api: error.response ? error.response.data.detail : '서버 오류가 발생했습니다.' });\n        setIsLoading(false);\n      }\n    }\n  };\n\n  return (\n    <div className=\"auth-modal\">\n      <h2>{type === 'login' ? '로그인' : '회원가입'}</h2>\n      <form onSubmit={handleSubmit}>\n        {type === 'register' && (\n          <>\n            <input\n              type=\"email\"\n              placeholder=\"이메일\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n            {errors.email && <p className=\"error\">{errors.email}</p>}\n            <input\n              type=\"text\"\n              placeholder=\"닉네임\"\n              value={nickname}\n              onChange={(e) => setNickname(e.target.value)}\n              required\n            />\n            {errors.nickname && <p className=\"error\">{errors.nickname}</p>}\n          </>\n        )}\n        <input\n          type=\"text\"\n          placeholder=\"아이디\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n        />\n        {errors.username && <p className=\"error\">{errors.username}</p>}\n        <input\n          type=\"password\"\n          placeholder=\"비밀번호\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n        {errors.password && <p className=\"error\">{errors.password}</p>}\n        {type === 'register' && (\n          <>\n            <input\n              type=\"password\"\n              placeholder=\"비밀번호 확인\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              required\n            />\n            {errors.confirmPassword && <p className=\"error\">{errors.confirmPassword}</p>}\n          </>\n        )}\n        {errors.api && <p className=\"error\">{errors.api}</p>}\n        <button type=\"submit\" disabled={isLoading}>\n          {isLoading ? '처리 중...' : (type === 'login' ? '로그인' : '회원가입')}\n        </button>\n      </form>\n      <button onClick={() => onSwitchAuthType(type === 'login' ? 'register' : 'login')} className=\"switch-auth-type\">\n        {type === 'login' ? '회원가입' : '로그인'}\n      </button>\n      <button onClick={onClose} className=\"close-button\">&times;</button>\n    </div>\n  );\n}\n\nexport default AuthModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}