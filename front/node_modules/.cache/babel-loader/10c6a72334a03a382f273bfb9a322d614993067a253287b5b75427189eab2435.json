{"ast":null,"code":"var _jsxFileName = \"/home/work/chat/front/src/components/ChatInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatInput({\n  onSendMessage,\n  isLoggedIn,\n  chatBanTimeLeft\n}) {\n  _s();\n  // 메시지 입력 상태 관리\n  const [message, setMessage] = useState('');\n  // 전송 버튼 비활성화 상태 관리\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n\n  // chatBanTimeLeft가 변경될 때마다 실행되는 효과\n  useEffect(() => {\n    // 채팅 금지 시간이 남아있으면 버튼 비활성화\n    if (chatBanTimeLeft > 0) {\n      setIsButtonDisabled(true);\n    } else {\n      setIsButtonDisabled(false);\n    }\n  }, [chatBanTimeLeft]);\n\n  // 폼 제출 핸들러\n  const handleSubmit = e => {\n    e.preventDefault();\n    // 메시지가 있고, 30자 이하이며, 로그인 상태이고, 채팅 금지 상태가 아닐 때만 전송\n    if (message.trim() && message.length <= 30 && isLoggedIn && chatBanTimeLeft === 0) {\n      onSendMessage(message);\n      setMessage(''); // 메시지 입력창 초기화\n      setIsButtonDisabled(true); // 버튼 일시적 비활성화\n      // 0.5초 후 버튼 다시 활성화 (연속 전송 방지)\n      setTimeout(() => setIsButtonDisabled(false), 500);\n    }\n  };\n\n  // 입력 변경 핸들러\n  const handleChange = e => {\n    const input = e.target.value;\n    // 30자 이하일 때만 입력 허용\n    if (input.length <= 30) {\n      setMessage(input);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"chat-input\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: handleChange\n      // 로그인 상태와 채팅 금지 상태에 따라 다른 플레이스홀더 표시\n      ,\n      placeholder: isLoggedIn ? chatBanTimeLeft > 0 ? `채팅 금지: ${chatBanTimeLeft}초 남음` : \"메시지를 입력하세요 (최대 30자)\" : \"\",\n      maxLength: 30\n      // 로그인 상태가 아니거나 채팅 금지 상태일 때 입력 비활성화\n      ,\n      disabled: !isLoggedIn || chatBanTimeLeft > 0\n      // 채팅 금지 상태일 때 추가 스타일 적용\n      ,\n      className: chatBanTimeLeft > 0 ? \"chat-banned\" : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\"\n      // 버튼 비활성화 조건: 버튼 비활성화 상태이거나 로그인하지 않았거나 채팅 금지 상태일 때\n      ,\n      disabled: isButtonDisabled || !isLoggedIn || chatBanTimeLeft > 0,\n      children: isLoggedIn ? chatBanTimeLeft > 0 ? `${chatBanTimeLeft}초` : \"전송\" : \"로그인 해주세요\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatInput, \"ncM/1IxAxR3VtXTVhHtalRDvqSc=\");\n_c = ChatInput;\nexport default ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ChatInput","onSendMessage","isLoggedIn","chatBanTimeLeft","_s","message","setMessage","isButtonDisabled","setIsButtonDisabled","handleSubmit","e","preventDefault","trim","length","setTimeout","handleChange","input","target","value","className","onSubmit","children","type","onChange","placeholder","maxLength","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/work/chat/front/src/components/ChatInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction ChatInput({ onSendMessage, isLoggedIn, chatBanTimeLeft }) {\n  // 메시지 입력 상태 관리\n  const [message, setMessage] = useState('');\n  // 전송 버튼 비활성화 상태 관리\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n\n  // chatBanTimeLeft가 변경될 때마다 실행되는 효과\n  useEffect(() => {\n    // 채팅 금지 시간이 남아있으면 버튼 비활성화\n    if (chatBanTimeLeft > 0) {\n      setIsButtonDisabled(true);\n    } else {\n      setIsButtonDisabled(false);\n    }\n  }, [chatBanTimeLeft]);\n\n  // 폼 제출 핸들러\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // 메시지가 있고, 30자 이하이며, 로그인 상태이고, 채팅 금지 상태가 아닐 때만 전송\n    if (message.trim() && message.length <= 30 && isLoggedIn && chatBanTimeLeft === 0) {\n      onSendMessage(message);\n      setMessage(''); // 메시지 입력창 초기화\n      setIsButtonDisabled(true); // 버튼 일시적 비활성화\n      // 0.5초 후 버튼 다시 활성화 (연속 전송 방지)\n      setTimeout(() => setIsButtonDisabled(false), 500);\n    }\n  };\n\n  // 입력 변경 핸들러\n  const handleChange = (e) => {\n    const input = e.target.value;\n    // 30자 이하일 때만 입력 허용\n    if (input.length <= 30) {\n      setMessage(input);\n    }\n  };\n\n  return (\n    <form className=\"chat-input\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={message}\n        onChange={handleChange}\n        // 로그인 상태와 채팅 금지 상태에 따라 다른 플레이스홀더 표시\n        placeholder={isLoggedIn ? (chatBanTimeLeft > 0 ? `채팅 금지: ${chatBanTimeLeft}초 남음` : \"메시지를 입력하세요 (최대 30자)\") : \"\"}\n        maxLength={30}\n        // 로그인 상태가 아니거나 채팅 금지 상태일 때 입력 비활성화\n        disabled={!isLoggedIn || chatBanTimeLeft > 0}\n        // 채팅 금지 상태일 때 추가 스타일 적용\n        className={chatBanTimeLeft > 0 ? \"chat-banned\" : \"\"}\n      />\n      <button \n        type=\"submit\" \n        // 버튼 비활성화 조건: 버튼 비활성화 상태이거나 로그인하지 않았거나 채팅 금지 상태일 때\n        disabled={isButtonDisabled || !isLoggedIn || chatBanTimeLeft > 0}\n      >\n        {/* 로그인 상태와 채팅 금지 상태에 따라 다른 버튼 텍스트 표시 */}\n        {isLoggedIn ? (chatBanTimeLeft > 0 ? `${chatBanTimeLeft}초` : \"전송\") : \"로그인 해주세요\"}\n      </button>\n    </form>\n  );\n}\n\nexport default ChatInput;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,SAASA,CAAC;EAAEC,aAAa;EAAEC,UAAU;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EACjE;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C;EACA,MAAM,CAACW,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;;EAE/D;EACAC,SAAS,CAAC,MAAM;IACd;IACA,IAAIM,eAAe,GAAG,CAAC,EAAE;MACvBK,mBAAmB,CAAC,IAAI,CAAC;IAC3B,CAAC,MAAM;MACLA,mBAAmB,CAAC,KAAK,CAAC;IAC5B;EACF,CAAC,EAAE,CAACL,eAAe,CAAC,CAAC;;EAErB;EACA,MAAMM,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA,IAAIN,OAAO,CAACO,IAAI,CAAC,CAAC,IAAIP,OAAO,CAACQ,MAAM,IAAI,EAAE,IAAIX,UAAU,IAAIC,eAAe,KAAK,CAAC,EAAE;MACjFF,aAAa,CAACI,OAAO,CAAC;MACtBC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;MAChBE,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC;MAC3B;MACAM,UAAU,CAAC,MAAMN,mBAAmB,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;IACnD;EACF,CAAC;;EAED;EACA,MAAMO,YAAY,GAAIL,CAAC,IAAK;IAC1B,MAAMM,KAAK,GAAGN,CAAC,CAACO,MAAM,CAACC,KAAK;IAC5B;IACA,IAAIF,KAAK,CAACH,MAAM,IAAI,EAAE,EAAE;MACtBP,UAAU,CAACU,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEjB,OAAA;IAAMoB,SAAS,EAAC,YAAY;IAACC,QAAQ,EAAEX,YAAa;IAAAY,QAAA,gBAClDtB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXJ,KAAK,EAAEb,OAAQ;MACfkB,QAAQ,EAAER;MACV;MAAA;MACAS,WAAW,EAAEtB,UAAU,GAAIC,eAAe,GAAG,CAAC,GAAG,UAAUA,eAAe,MAAM,GAAG,qBAAqB,GAAI,EAAG;MAC/GsB,SAAS,EAAE;MACX;MAAA;MACAC,QAAQ,EAAE,CAACxB,UAAU,IAAIC,eAAe,GAAG;MAC3C;MAAA;MACAgB,SAAS,EAAEhB,eAAe,GAAG,CAAC,GAAG,aAAa,GAAG;IAAG;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eACF/B,OAAA;MACEuB,IAAI,EAAC;MACL;MAAA;MACAI,QAAQ,EAAEnB,gBAAgB,IAAI,CAACL,UAAU,IAAIC,eAAe,GAAG,CAAE;MAAAkB,QAAA,EAGhEnB,UAAU,GAAIC,eAAe,GAAG,CAAC,GAAG,GAAGA,eAAe,GAAG,GAAG,IAAI,GAAI;IAAU;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX;AAAC1B,EAAA,CA9DQJ,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAgElB,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}