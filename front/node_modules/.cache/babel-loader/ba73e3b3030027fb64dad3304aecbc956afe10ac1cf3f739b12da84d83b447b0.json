{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import ChatMessages from'../components/ChatMessages';import ChatInput from'../components/ChatInput';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ChatPage(_ref){let{socket,user}=_ref;const[messages,setMessages]=useState([]);const handleSendMessage=useCallback(messageText=>{if(socket&&socket.readyState===WebSocket.OPEN&&user){const messageObj={message:messageText,sender:user.userId,username:user.username,timestamp:Date.now()};socket.send(JSON.stringify(messageObj));}else{console.error('WebSocket is not connected or user is not logged in');}},[socket,user]);useEffect(()=>{if(!socket)return;const handleMessage=event=>{const data=JSON.parse(event.data);setMessages(prev=>{const isDuplicate=prev.some(msg=>msg.timestamp===data.timestamp);if(isDuplicate)return prev;return[...prev,{text:data.message,sender:data.sender===(user===null||user===void 0?void 0:user.userId)?'user':'other',username:data.username,timestamp:data.timestamp}];});};socket.addEventListener('message',handleMessage);return()=>{socket.removeEventListener('message',handleMessage);};},[socket,user]);return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-page\",children:[/*#__PURE__*/_jsx(ChatMessages,{messages:messages,currentUserId:user===null||user===void 0?void 0:user.userId}),/*#__PURE__*/_jsx(ChatInput,{onSendMessage:handleSendMessage,isLoggedIn:!!user})]});}export default ChatPage;","map":{"version":3,"names":["React","useState","useEffect","useCallback","ChatMessages","ChatInput","jsx","_jsx","jsxs","_jsxs","ChatPage","_ref","socket","user","messages","setMessages","handleSendMessage","messageText","readyState","WebSocket","OPEN","messageObj","message","sender","userId","username","timestamp","Date","now","send","JSON","stringify","console","error","handleMessage","event","data","parse","prev","isDuplicate","some","msg","text","addEventListener","removeEventListener","className","children","currentUserId","onSendMessage","isLoggedIn"],"sources":["/home/work/chat/front/src/pages/ChatPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport ChatMessages from '../components/ChatMessages';\nimport ChatInput from '../components/ChatInput';\n\nfunction ChatPage({ socket, user }) {\n  const [messages, setMessages] = useState([]);\n\n  const handleSendMessage = useCallback((messageText) => {\n    if (socket && socket.readyState === WebSocket.OPEN && user) {\n      const messageObj = {\n        message: messageText,\n        sender: user.userId,\n        username: user.username,\n        timestamp: Date.now()\n      };\n      socket.send(JSON.stringify(messageObj));\n    } else {\n      console.error('WebSocket is not connected or user is not logged in');\n    }\n  }, [socket, user]);\n\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleMessage = (event) => {\n      const data = JSON.parse(event.data);\n      \n      setMessages(prev => {\n        const isDuplicate = prev.some(msg => msg.timestamp === data.timestamp);\n        if (isDuplicate) return prev;\n\n        return [...prev, {\n          text: data.message,\n          sender: data.sender === user?.userId ? 'user' : 'other',\n          username: data.username,\n          timestamp: data.timestamp\n        }];\n      });\n    };\n\n    socket.addEventListener('message', handleMessage);\n\n    return () => {\n      socket.removeEventListener('message', handleMessage);\n    };\n  }, [socket, user]);\n\n  return (\n    <div className=\"chat-page\">\n      <ChatMessages messages={messages} currentUserId={user?.userId} />\n      <ChatInput onSendMessage={handleSendMessage} isLoggedIn={!!user} />\n    </div>\n  );\n}\n\nexport default ChatPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,WAAW,KAAQ,OAAO,CAC/D,MAAO,CAAAC,YAAY,KAAM,4BAA4B,CACrD,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhD,QAAS,CAAAC,QAAQA,CAAAC,IAAA,CAAmB,IAAlB,CAAEC,MAAM,CAAEC,IAAK,CAAC,CAAAF,IAAA,CAChC,KAAM,CAACG,QAAQ,CAAEC,WAAW,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAE5C,KAAM,CAAAe,iBAAiB,CAAGb,WAAW,CAAEc,WAAW,EAAK,CACrD,GAAIL,MAAM,EAAIA,MAAM,CAACM,UAAU,GAAKC,SAAS,CAACC,IAAI,EAAIP,IAAI,CAAE,CAC1D,KAAM,CAAAQ,UAAU,CAAG,CACjBC,OAAO,CAAEL,WAAW,CACpBM,MAAM,CAAEV,IAAI,CAACW,MAAM,CACnBC,QAAQ,CAAEZ,IAAI,CAACY,QAAQ,CACvBC,SAAS,CAAEC,IAAI,CAACC,GAAG,CAAC,CACtB,CAAC,CACDhB,MAAM,CAACiB,IAAI,CAACC,IAAI,CAACC,SAAS,CAACV,UAAU,CAAC,CAAC,CACzC,CAAC,IAAM,CACLW,OAAO,CAACC,KAAK,CAAC,qDAAqD,CAAC,CACtE,CACF,CAAC,CAAE,CAACrB,MAAM,CAAEC,IAAI,CAAC,CAAC,CAElBX,SAAS,CAAC,IAAM,CACd,GAAI,CAACU,MAAM,CAAE,OAEb,KAAM,CAAAsB,aAAa,CAAIC,KAAK,EAAK,CAC/B,KAAM,CAAAC,IAAI,CAAGN,IAAI,CAACO,KAAK,CAACF,KAAK,CAACC,IAAI,CAAC,CAEnCrB,WAAW,CAACuB,IAAI,EAAI,CAClB,KAAM,CAAAC,WAAW,CAAGD,IAAI,CAACE,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACf,SAAS,GAAKU,IAAI,CAACV,SAAS,CAAC,CACtE,GAAIa,WAAW,CAAE,MAAO,CAAAD,IAAI,CAE5B,MAAO,CAAC,GAAGA,IAAI,CAAE,CACfI,IAAI,CAAEN,IAAI,CAACd,OAAO,CAClBC,MAAM,CAAEa,IAAI,CAACb,MAAM,IAAKV,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEW,MAAM,EAAG,MAAM,CAAG,OAAO,CACvDC,QAAQ,CAAEW,IAAI,CAACX,QAAQ,CACvBC,SAAS,CAAEU,IAAI,CAACV,SAClB,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAEDd,MAAM,CAAC+B,gBAAgB,CAAC,SAAS,CAAET,aAAa,CAAC,CAEjD,MAAO,IAAM,CACXtB,MAAM,CAACgC,mBAAmB,CAAC,SAAS,CAAEV,aAAa,CAAC,CACtD,CAAC,CACH,CAAC,CAAE,CAACtB,MAAM,CAAEC,IAAI,CAAC,CAAC,CAElB,mBACEJ,KAAA,QAAKoC,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBvC,IAAA,CAACH,YAAY,EAACU,QAAQ,CAAEA,QAAS,CAACiC,aAAa,CAAElC,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEW,MAAO,CAAE,CAAC,cACjEjB,IAAA,CAACF,SAAS,EAAC2C,aAAa,CAAEhC,iBAAkB,CAACiC,UAAU,CAAE,CAAC,CAACpC,IAAK,CAAE,CAAC,EAChE,CAAC,CAEV,CAEA,cAAe,CAAAH,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}