{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { URLS } from '../urls';\nexport function useWebSocket(user) {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [userCount, setUserCount] = useState(0);\n  const [showSessionExpiredModal, setShowSessionExpiredModal] = useState(false);\n  const [chatBanTimeLeft, setChatBanTimeLeft] = useState(0);\n  const reconnectAttempt = useRef(0);\n  const timeoutId = useRef(null);\n  const setupWebSocket = useCallback(() => {\n    if (!user) return;\n    const newSocket = new WebSocket(`${URLS.WS_URL}/${user.userId}`);\n    newSocket.onopen = () => {\n      console.log('WebSocket Connected');\n      setSocket(newSocket);\n      reconnectAttempt.current = 0;\n    };\n    newSocket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'user_count') {\n        setUserCount(data.count);\n      } else if (data.type === 'session_expired') {\n        setShowSessionExpiredModal(true);\n      } else if (data.type === 'chat_banned') {\n        setChatBanTimeLeft(data.time_left);\n      }\n    };\n    newSocket.onclose = event => {\n      if (event.code !== 1000) {\n        console.log('WebSocket Disconnected');\n        const timeout = Math.min(1000 * 2 ** reconnectAttempt.current, 30000);\n        const jitter = Math.random() * 1000;\n        console.log(`Attempting to reconnect in ${timeout + jitter}ms...`);\n        timeoutId.current = setTimeout(() => {\n          reconnectAttempt.current++;\n          setupWebSocket();\n        }, timeout + jitter);\n      }\n    };\n    newSocket.onerror = error => {\n      console.error('WebSocket Error:', error);\n    };\n  }, [user]);\n  useEffect(() => {\n    if (user) {\n      setupWebSocket();\n    }\n    return () => {\n      if (socket) {\n        socket.close(1000, \"Intentional disconnect\");\n      }\n      if (timeoutId.current) {\n        clearTimeout(timeoutId.current);\n      }\n    };\n  }, [user, setupWebSocket]);\n  useEffect(() => {\n    if (chatBanTimeLeft > 0) {\n      const timer = setInterval(() => {\n        setChatBanTimeLeft(prev => Math.max(0, prev - 1));\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [chatBanTimeLeft]);\n  useEffect(() => {\n    if (socket) {\n      const handleMessage = event => {\n        const data = JSON.parse(event.data);\n        if (data.type === 'chat_banned') {\n          setChatBanTimeLeft(data.time_left);\n        }\n      };\n      socket.addEventListener('message', handleMessage);\n      return () => {\n        socket.removeEventListener('message', handleMessage);\n      };\n    }\n  }, [socket]);\n  const sendMessage = useCallback(messageObj => {\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      socket.send(JSON.stringify(messageObj));\n    } else {\n      console.error('WebSocket is not connected');\n    }\n  }, [socket]);\n  return {\n    socket,\n    userCount,\n    showSessionExpiredModal,\n    setShowSessionExpiredModal,\n    chatBanTimeLeft,\n    sendMessage\n  };\n}\n_s(useWebSocket, \"b1M5pcSEz1BirjStaA6zbz5BR7I=\");","map":{"version":3,"names":["useState","useEffect","useCallback","useRef","URLS","useWebSocket","user","_s","socket","setSocket","userCount","setUserCount","showSessionExpiredModal","setShowSessionExpiredModal","chatBanTimeLeft","setChatBanTimeLeft","reconnectAttempt","timeoutId","setupWebSocket","newSocket","WebSocket","WS_URL","userId","onopen","console","log","current","onmessage","event","data","JSON","parse","type","count","time_left","onclose","code","timeout","Math","min","jitter","random","setTimeout","onerror","error","close","clearTimeout","timer","setInterval","prev","max","clearInterval","handleMessage","addEventListener","removeEventListener","sendMessage","messageObj","readyState","OPEN","send","stringify"],"sources":["/home/work/chat/front/src/hooks/useWebSocket.js"],"sourcesContent":["import { useState, useEffect, useCallback, useRef } from 'react';\nimport { URLS } from '../urls';\n\nexport function useWebSocket(user) {\n  const [socket, setSocket] = useState(null);\n  const [userCount, setUserCount] = useState(0);\n  const [showSessionExpiredModal, setShowSessionExpiredModal] = useState(false);\n  const [chatBanTimeLeft, setChatBanTimeLeft] = useState(0);\n\n  const reconnectAttempt = useRef(0);\n  const timeoutId = useRef(null);\n\n  const setupWebSocket = useCallback(() => {\n    if (!user) return;\n\n    const newSocket = new WebSocket(`${URLS.WS_URL}/${user.userId}`);\n\n    newSocket.onopen = () => {\n      console.log('WebSocket Connected');\n      setSocket(newSocket);\n      reconnectAttempt.current = 0;\n    };\n\n    newSocket.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'user_count') {\n        setUserCount(data.count);\n      } else if (data.type === 'session_expired') {\n        setShowSessionExpiredModal(true);\n      } else if (data.type === 'chat_banned') {\n        setChatBanTimeLeft(data.time_left);\n      }\n    };\n\n    newSocket.onclose = (event) => {\n      if (event.code !== 1000) {\n        console.log('WebSocket Disconnected');\n        const timeout = Math.min(1000 * (2 ** reconnectAttempt.current), 30000);\n        const jitter = Math.random() * 1000;\n        console.log(`Attempting to reconnect in ${timeout + jitter}ms...`);\n        \n        timeoutId.current = setTimeout(() => {\n          reconnectAttempt.current++;\n          setupWebSocket();\n        }, timeout + jitter);\n      }\n    };\n\n    newSocket.onerror = (error) => {\n      console.error('WebSocket Error:', error);\n    };\n  }, [user]);\n\n  useEffect(() => {\n    if (user) {\n      setupWebSocket();\n    }\n    return () => {\n      if (socket) {\n        socket.close(1000, \"Intentional disconnect\");\n      }\n      if (timeoutId.current) {\n        clearTimeout(timeoutId.current);\n      }\n    };\n  }, [user, setupWebSocket]);\n\n  useEffect(() => {\n    if (chatBanTimeLeft > 0) {\n      const timer = setInterval(() => {\n        setChatBanTimeLeft((prev) => Math.max(0, prev - 1));\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [chatBanTimeLeft]);\n\n  useEffect(() => {\n    if (socket) {\n      const handleMessage = (event) => {\n        const data = JSON.parse(event.data);\n        if (data.type === 'chat_banned') {\n          setChatBanTimeLeft(data.time_left);\n        }\n      };\n\n      socket.addEventListener('message', handleMessage);\n\n      return () => {\n        socket.removeEventListener('message', handleMessage);\n      };\n    }\n  }, [socket]);\n\n  const sendMessage = useCallback((messageObj) => {\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      socket.send(JSON.stringify(messageObj));\n    } else {\n      console.error('WebSocket is not connected');\n    }\n  }, [socket]);\n\n  return {\n    socket,\n    userCount,\n    showSessionExpiredModal,\n    setShowSessionExpiredModal,\n    chatBanTimeLeft,\n    sendMessage\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}