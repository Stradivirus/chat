{"ast":null,"code":"import React,{useEffect,useRef}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ChatMessages(_ref){let{messages,currentUserId}=_ref;const messagesEndRef=useRef(null);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});};useEffect(scrollToBottom,[messages]);// Unicode 문자열을 디코딩하는 함수\nconst decodeUnicode=str=>{return str.replace(/\\\\u[\\dA-F]{4}/gi,match=>{return String.fromCharCode(parseInt(match.replace(/\\\\u/g,''),16));});};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-messages\",children:[messages.map((message,index)=>{let messageContent,sender,username;if(typeof message==='string'){try{const parsedMessage=JSON.parse(message);messageContent=parsedMessage.message;sender=parsedMessage.sender;username=parsedMessage.username;}catch(e){console.error(\"Failed to parse message:\",e);return null;}}else{messageContent=message.message||message.text;sender=message.sender;username=message.username;}// System message 처리\nif(sender==='system'||message.type==='system'){messageContent=decodeUnicode(messageContent);}if(!messageContent||messageContent.trim()===''||messageContent==='내용 없음'){return null;}return/*#__PURE__*/_jsxs(\"div\",{className:`message ${sender===currentUserId?'user':sender==='system'?'system':'other'}`,children:[sender!==currentUserId&&sender!=='system'&&/*#__PURE__*/_jsxs(\"span\",{className:\"message-username\",children:[/*#__PURE__*/_jsx(\"strong\",{children:username||'Anonymous'}),\" \"]}),/*#__PURE__*/_jsx(\"span\",{children:messageContent})]},index);}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]});}export default ChatMessages;","map":{"version":3,"names":["React","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","ChatMessages","_ref","messages","currentUserId","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","decodeUnicode","str","replace","match","String","fromCharCode","parseInt","className","children","map","message","index","messageContent","sender","username","parsedMessage","JSON","parse","e","console","error","text","type","trim","ref"],"sources":["/home/work/chat/front/src/components/ChatMessages.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nfunction ChatMessages({ messages, currentUserId }) {\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n\n  // Unicode 문자열을 디코딩하는 함수\n  const decodeUnicode = (str) => {\n    return str.replace(/\\\\u[\\dA-F]{4}/gi, (match) => {\n      return String.fromCharCode(parseInt(match.replace(/\\\\u/g, ''), 16));\n    });\n  };\n\n  return (\n    <div className=\"chat-messages\">\n      {messages.map((message, index) => {\n        let messageContent, sender, username;\n        \n        if (typeof message === 'string') {\n          try {\n            const parsedMessage = JSON.parse(message);\n            messageContent = parsedMessage.message;\n            sender = parsedMessage.sender;\n            username = parsedMessage.username;\n          } catch (e) {\n            console.error(\"Failed to parse message:\", e);\n            return null;\n          }\n        } else {\n          messageContent = message.message || message.text;\n          sender = message.sender;\n          username = message.username;\n        }\n\n        // System message 처리\n        if (sender === 'system' || message.type === 'system') {\n          messageContent = decodeUnicode(messageContent);\n        }\n\n        if (!messageContent || messageContent.trim() === '' || messageContent === '내용 없음') {\n          return null;\n        }\n\n        return (\n          <div \n            key={index} \n            className={`message ${sender === currentUserId ? 'user' : (sender === 'system' ? 'system' : 'other')}`}\n          >\n            {sender !== currentUserId && sender !== 'system' && (\n              <span className=\"message-username\"><strong>{username || 'Anonymous'}</strong> </span>\n            )}\n            <span>{messageContent}</span>\n          </div>\n        );\n      })}\n      <div ref={messagesEndRef} />\n    </div>\n  );\n}\n\nexport default ChatMessages;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjD,QAAS,CAAAC,YAAYA,CAAAC,IAAA,CAA8B,IAA7B,CAAEC,QAAQ,CAAEC,aAAc,CAAC,CAAAF,IAAA,CAC/C,KAAM,CAAAG,cAAc,CAAGT,MAAM,CAAC,IAAI,CAAC,CAEnC,KAAM,CAAAU,cAAc,CAAGA,CAAA,GAAM,KAAAC,qBAAA,CAC3B,CAAAA,qBAAA,CAAAF,cAAc,CAACG,OAAO,UAAAD,qBAAA,iBAAtBA,qBAAA,CAAwBE,cAAc,CAAC,CAAEC,QAAQ,CAAE,QAAS,CAAC,CAAC,CAChE,CAAC,CAEDf,SAAS,CAACW,cAAc,CAAE,CAACH,QAAQ,CAAC,CAAC,CAErC;AACA,KAAM,CAAAQ,aAAa,CAAIC,GAAG,EAAK,CAC7B,MAAO,CAAAA,GAAG,CAACC,OAAO,CAAC,iBAAiB,CAAGC,KAAK,EAAK,CAC/C,MAAO,CAAAC,MAAM,CAACC,YAAY,CAACC,QAAQ,CAACH,KAAK,CAACD,OAAO,CAAC,MAAM,CAAE,EAAE,CAAC,CAAE,EAAE,CAAC,CAAC,CACrE,CAAC,CAAC,CACJ,CAAC,CAED,mBACEb,KAAA,QAAKkB,SAAS,CAAC,eAAe,CAAAC,QAAA,EAC3BhB,QAAQ,CAACiB,GAAG,CAAC,CAACC,OAAO,CAAEC,KAAK,GAAK,CAChC,GAAI,CAAAC,cAAc,CAAEC,MAAM,CAAEC,QAAQ,CAEpC,GAAI,MAAO,CAAAJ,OAAO,GAAK,QAAQ,CAAE,CAC/B,GAAI,CACF,KAAM,CAAAK,aAAa,CAAGC,IAAI,CAACC,KAAK,CAACP,OAAO,CAAC,CACzCE,cAAc,CAAGG,aAAa,CAACL,OAAO,CACtCG,MAAM,CAAGE,aAAa,CAACF,MAAM,CAC7BC,QAAQ,CAAGC,aAAa,CAACD,QAAQ,CACnC,CAAE,MAAOI,CAAC,CAAE,CACVC,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAEF,CAAC,CAAC,CAC5C,MAAO,KAAI,CACb,CACF,CAAC,IAAM,CACLN,cAAc,CAAGF,OAAO,CAACA,OAAO,EAAIA,OAAO,CAACW,IAAI,CAChDR,MAAM,CAAGH,OAAO,CAACG,MAAM,CACvBC,QAAQ,CAAGJ,OAAO,CAACI,QAAQ,CAC7B,CAEA;AACA,GAAID,MAAM,GAAK,QAAQ,EAAIH,OAAO,CAACY,IAAI,GAAK,QAAQ,CAAE,CACpDV,cAAc,CAAGZ,aAAa,CAACY,cAAc,CAAC,CAChD,CAEA,GAAI,CAACA,cAAc,EAAIA,cAAc,CAACW,IAAI,CAAC,CAAC,GAAK,EAAE,EAAIX,cAAc,GAAK,OAAO,CAAE,CACjF,MAAO,KAAI,CACb,CAEA,mBACEvB,KAAA,QAEEkB,SAAS,CAAE,WAAWM,MAAM,GAAKpB,aAAa,CAAG,MAAM,CAAIoB,MAAM,GAAK,QAAQ,CAAG,QAAQ,CAAG,OAAQ,EAAG,CAAAL,QAAA,EAEtGK,MAAM,GAAKpB,aAAa,EAAIoB,MAAM,GAAK,QAAQ,eAC9CxB,KAAA,SAAMkB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAACrB,IAAA,WAAAqB,QAAA,CAASM,QAAQ,EAAI,WAAW,CAAS,CAAC,IAAC,EAAM,CACrF,cACD3B,IAAA,SAAAqB,QAAA,CAAOI,cAAc,CAAO,CAAC,GANxBD,KAOF,CAAC,CAEV,CAAC,CAAC,cACFxB,IAAA,QAAKqC,GAAG,CAAE9B,cAAe,CAAE,CAAC,EACzB,CAAC,CAEV,CAEA,cAAe,CAAAJ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}